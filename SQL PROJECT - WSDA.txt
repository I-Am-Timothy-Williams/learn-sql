Project Description

PROBLEM

Money is missing!

1. Analyze WSDA data
2. Get a list of suspects
3. Narrow list to prime suspects
4. Reveal who is responsible for the missing money!

SOLUTION

Which tables could be potentially relevant to suspects for the crime?

1) Look at Database Structure
	- I think it is probable that only employees have the potential to take money from WSDA
	- Tables that have employee ID are Customer(SupportRepId), Employee (EmployeeId)
	- Tables that link to money are Invoice and InvoiceLine

a) How many transactions took place between the years 2011 - 2012?
b) How much money did WSDA Music make during the same period?

a)
SELECT
	COUNT(*)
FROM
	Invoice
WHERE 
	InvoiceDate >= '2011-01-01' AND InvoiceDate <= '2012-12-31'

b)
SELECT
	Sum(total)
FROM
	Invoice
WHERE 
	InvoiceDate >= '2011-01-01' AND InvoiceDate <= '2012-12-31'

2. More targeted questions that query the tables that ive identified
a) Get a list of customers who made purchases between 2011-2012
b) Get a list of customers, sales reps, total transaction amounts for each custoemr between 2011-2012
c) How many transactions are above the average transaction amount during the same time?
d) What was the average transaction amount for each year that WSDA Music Co has been in business


a)
SELECT
	c.FirstName,
	c.LastName,
	i.total
FROM 
	Invoice i
INNER JOIN 
	Customer c
ON 
	i.CustomerId = c.CustomerId
WHERE 
	InvoiceDate >= '2011-01-01' AND InvoiceDate <= '2012-12-31'
ORDER BY
	i.total DESC

b)
SELECT
	c.FirstName AS [Customer FN],
	c.LastName AS [Customer LN],
	e.FirstName AS [Employee FN],
	e.LastName AS [Employee LN],
	i.total
FROM 
	Invoice i
INNER JOIN 
	Customer c
ON 
	i.CustomerId = c.CustomerId
INNER JOIN
	Employee e
ON
	e.EmployeeId = c.SupportRepId
WHERE 
	InvoiceDate >= '2011-01-01' AND InvoiceDate <= '2012-12-31'
ORDER BY
	i.total DESC

c) i) Average transaction amount between 2011 and 2012
SELECT
	round(avg(total),2) AS [Avg Transaction Amount]
FROM
	Invoice
WHERE
	InvoiceDate >= '2011-01-01' AND InvoiceDate <= '2012-12-31'

ii) Number of transactions above the average transaction amount

SELECT 
	count(total) AS [Num of Transactions Above Avg]
FROM
	Invoice
WHERE total>
	(
		Select
			round(avg(total),2) AS [Avg Transaction Amount]
		FROM
			Invoice
		WHERE
			InvoiceDate >= '2011-01-01' AND InvoiceDate <= '2012-12-31'
	)
AND
InvoiceDate >= '2011-01-01' AND InvoiceDate <= '2012-12-31'

d)

SELECT
	round(avg(total),2) AS [Avg Transaction Amount]
	strftime(%Y,InvoiceDate) AS [Year]
FROM
	Invoice
GROUP BY
	strftime(%Y,InvoiceDate)


3. Queries that Perform an In Depth Analysis with the aim of finding employees who may have been financially motivated to commit the crime

a) Get a list of employees who exceeded the average transaction amount from sales they generated during 2011-2012
b) Create a Commission payout column that displays each employees commission based on 15% of the sales transaction amount
c) Which employee made the highest commission
d) List the customers that were served by the employee indentified in the last question
e) Which customer made the highest purchase?
f) Look at the customer record.


a) 

SELECT
	e.FirstName,
	e.LastName,
	sum(i.total) AS [Total Sales]
FROM
	Invoice i
INNER JOIN
	Customer c
ON i.CustomerId = c.CustomerId
INNER JOIN
	Employee e
ON e.EmployeeId = c.SpportRepId
WHERE 
	InvoiceDate >= '2011-01-01' AND InvoiceDate <= '2012-12-31'
AND
	i.total >11.66
GROUP BY
	e.First Name,
	e.LastNAme
ORDER BY e.LastName

b) 
SELECT
	e.FirstName,
	e.LastName,
	sum(i.total) AS [Total Sales],
	round(sum(i.total)*.15,2) AS [Commission Payout]
FROM
	Invoice i
INNER JOIN
	Customer c
ON i.CustomerId = c.CustomerId
INNER JOIN
	Employee e
ON e.EmployeeId = c.SpportRepId
WHERE 
	InvoiceDate >= '2011-01-01' AND InvoiceDate <= '2012-12-31'
GROUP BY
	e.First Name,
	e.LastNAme
ORDER BY e.LastName

c)
Employee 3, Jane Peacock, $106.21

d)
SELECT
	c.FirstName AS [Customer FN],
	c.LastName AS [Customer LN],
	e.FirstName AS [Employee FN],
	e.LastName AS [Employee LN],
	sum(i.total) AS [Total Sales],
	round(sum(i.total)*.15,2) AS [Commission Payout]
FROM 
	Invoice i
INNER JOIN 
	Customer c
ON 
	i.CustomerId = c.CustomerId
INNER JOIN
	Employee e
ON
	e.EmployeeId = c.SupportRepId
WHERE 
	InvoiceDate >= '2011-01-01' AND InvoiceDate <= '2012-12-31'
AND e.LastNAme = 'Peacock'
ORDER BY
	[Total Sales] DESC

-- Highest purchase was John Doeein

e) 
SELECT
*
From
	Customer c
WHERE
	c.LastNAme = 'Doeein'

